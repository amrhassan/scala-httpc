{
  "name": "Scala-httpc",
  "tagline": "HTTP Client for Scala",
  "body": "# scala-httpc\r\n[![Build Status](https://travis-ci.org/amrhassan/scala-httpc.svg?branch=master)](https://travis-ci.org/amrhassan/scala-httpc)\r\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/io.github.amrhassan/scala-httpc_2.11/badge.svg)](https://maven-badges.herokuapp.com/maven-central/io.github.amrhassan/scala-httpc_2.11)\r\n\r\nA reasonably minimal HTTP Client for Scala built using purely functional programming and [cats](https://github.com/typelevel/cats)\r\n\r\nOptional support for JSON payloads is available via [Circe](https://github.com/travisbrown/circe).\r\n\r\n# Quick Usage #\r\n\r\n```sbt\r\nlibraryDependencies ++= Seq(\"io.github.amrhassan\" %% \"httpc\" % \"0.3.0-RC1\")\r\n```\r\n\r\n```scala\r\nimport httpc.all._\r\n\r\nobject Sandbox extends App {\r\n\r\n  // Description of a PUT request yielding a response\r\n  val command = put(\"http://httpbin.org/put\", \r\n      data = \"OK Computer\",\r\n      headers = List(cacheControlNoCache))\r\n\r\n  // Run the command into an Either[HttpError, Response]\r\n  run(command) match {\r\n    case Left(error) ⇒ println(error)\r\n    case Right(response) ⇒\r\n      println(response.status)\r\n      println(response.text)\r\n      println(response.json)\r\n  }\r\n}\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}